name: Validate Map Data

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: read
  pull-requests: write

jobs:
  generate-map-data-and-schema:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Generate map data
        run: npm run generate-map-data

      # Check for types.ts file changes and set environment variable
      - name: Check for types.ts changes
        id: check-for-types-change
        uses: tj-actions/changed-files@77af4bed286740ef1a6387dc4e4e4dec39f96054 # = v43.0.0
        with:
          files: "src/types.ts"

      # Run generate-schema script only if types.ts file changed
      - name: Run generate-schema script
        if: steps.check-for-types-change.outputs.any_changed == 'true'
        run: npm run generate-schema

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@d774a4c7ebe335445d79c7b44138f56a76058ba0 # = v19.0.0
        id: verify-changed-map-data
        with:
          files: |
            official-map-data.json
            source-list.json
            official-map-data.schema.json

      - name: Commit and push map data changes
        if: steps.verify-changed-map-data.outputs.files_changed == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          author_name: "Adventure Team"
          author_email: "ddb-adventure-team@wizards.com"
          message: "Continuous Integration: Update data and schema files"
          add: |
            official-map-data.json
            source-list.json
            official-map-data.schema.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs:
      - generate-map-data-and-schema
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Configure Datadog Test Visibility
        uses: datadog/test-visibility-github-action@v2.1.1
        with:
          languages: js
          service: official-map-data
          api_key: ${{ secrets.DD_API_KEY_CI }}
          site: datadoghq.com

      - name: Run tests
        run: npm test
        env:
          NODE_OPTIONS: -r ${{ env.DD_TRACE_PACKAGE }}
          DD_ENV: "ci"
          DD_TAGS: "layer:unit"
          DD_CIVISIBILITY_CODE_COVERAGE_ENABLED: true
